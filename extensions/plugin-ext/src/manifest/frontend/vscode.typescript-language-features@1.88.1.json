{
  "metadata": {
    "host": "main",
    "model": {
      "packagePath": "/Users/zqlu/Sources/eclipse-theia/theia-dev-kit/plugins/vscode.typescript-language-features/extension",
      "packageUri": "file:///Users/zqlu/Sources/eclipse-theia/theia-dev-kit/plugins/vscode.typescript-language-features/extension",
      "id": "vscode.typescript-language-features",
      "name": "typescript-language-features",
      "publisher": "vscode",
      "version": "1.88.1",
      "displayName": "TypeScript and JavaScript Language Features (built-in)",
      "description": "Provides rich language support for JavaScript and TypeScript.",
      "engine": {
        "type": "vscode",
        "version": "^1.30.0"
      },
      "entryPoint": {
        "frontend": "dist/browser/extension.js"
      },
      "iconUrl": "hostedPlugin/vscode_typescript_language_features/media%2Ficon.png",
      "readmeUrl": "hostedPlugin/vscode_typescript_language_features/.%2FREADME.md",
      "licenseUrl": "hostedPlugin/vscode_typescript_language_features/.%2FLICENSE"
    },
    "lifecycle": {
      "startMethod": "activate",
      "stopMethod": "deactivate",
      "frontendModuleName": "vscode_typescript_language_features",
      "frontendInitPath": "plugin-vscode-init-fe.js",
      "backendInitPath": "/Users/zqlu/Sources/eclipse-theia/theia-dev-kit/browser-app/lib/backend/plugin-vscode-init"
    },
    "outOfSync": false,
    "isUnderDevelopment": false
  },
  "type": 0,
  "contributes": {
    "activationEvents": [
      "onLanguage:javascript",
      "onLanguage:javascriptreact",
      "onLanguage:typescript",
      "onLanguage:typescriptreact",
      "onLanguage:jsx-tags",
      "onCommand:typescript.tsserverRequest",
      "onCommand:_typescript.configurePlugin",
      "onCommand:_typescript.learnMoreAboutRefactorings",
      "onCommand:typescript.fileReferences",
      "onTaskType:typescript",
      "onLanguage:jsonc",
      "onWalkthrough:nodejsWelcome",
      "onCommand:typescript.reloadProjects",
      "onCommand:javascript.reloadProjects",
      "onCommand:typescript.selectTypeScriptVersion",
      "onCommand:typescript.goToProjectConfig",
      "onCommand:javascript.goToProjectConfig",
      "onCommand:typescript.openTsServerLog",
      "onCommand:typescript.restartTsServer",
      "onCommand:typescript.findAllFileReferences",
      "onCommand:typescript.goToSourceDefinition",
      "onCommand:typescript.sortImports",
      "onCommand:javascript.sortImports",
      "onCommand:typescript.removeUnusedImports",
      "onCommand:javascript.removeUnusedImports"
    ],
    "configuration": [
      {
        "type": "object",
        "title": "%configuration.typescript%",
        "order": 20,
        "properties": {
          "typescript.tsdk": {
            "type": "string",
            "markdownDescription": "%typescript.tsdk.desc%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.disableAutomaticTypeAcquisition": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%typescript.disableAutomaticTypeAcquisition%",
            "scope": "window",
            "tags": ["usesOnlineServices"],
            "owner": "%configuration.typescript%"
          },
          "typescript.enablePromptUseWorkspaceTsdk": {
            "type": "boolean",
            "default": false,
            "description": "%typescript.enablePromptUseWorkspaceTsdk%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.npm": {
            "type": "string",
            "markdownDescription": "%typescript.npm%",
            "scope": "machine",
            "owner": "%configuration.typescript%"
          },
          "typescript.check.npmIsInstalled": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%typescript.check.npmIsInstalled%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.referencesCodeLens.enabled": {
            "type": "boolean",
            "default": false,
            "description": "%javascript.referencesCodeLens.enabled%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.referencesCodeLens.showOnAllFunctions": {
            "type": "boolean",
            "default": false,
            "description": "%javascript.referencesCodeLens.showOnAllFunctions%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.referencesCodeLens.enabled": {
            "type": "boolean",
            "default": false,
            "description": "%typescript.referencesCodeLens.enabled%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.referencesCodeLens.showOnAllFunctions": {
            "type": "boolean",
            "default": false,
            "description": "%typescript.referencesCodeLens.showOnAllFunctions%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.implementationsCodeLens.enabled": {
            "type": "boolean",
            "default": false,
            "description": "%typescript.implementationsCodeLens.enabled%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.implementationsCodeLens.showOnInterfaceMethods": {
            "type": "boolean",
            "default": false,
            "description": "%typescript.implementationsCodeLens.showOnInterfaceMethods%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.enableTracing": {
            "type": "boolean",
            "default": false,
            "description": "%typescript.tsserver.enableTracing%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.log": {
            "type": "string",
            "enum": ["off", "terse", "normal", "verbose"],
            "default": "off",
            "description": "%typescript.tsserver.log%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.pluginPaths": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "%typescript.tsserver.pluginPaths.item%"
            },
            "default": [],
            "description": "%typescript.tsserver.pluginPaths%",
            "scope": "machine",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.completeFunctionCalls": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.suggest.completeFunctionCalls%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.completeFunctionCalls": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.suggest.completeFunctionCalls%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.includeAutomaticOptionalChainCompletions": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.includeAutomaticOptionalChainCompletions%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.includeAutomaticOptionalChainCompletions": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.includeAutomaticOptionalChainCompletions%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.inlayHints.parameterNames.enabled": {
            "type": "string",
            "enum": ["none", "literals", "all"],
            "enumDescriptions": [
              "%inlayHints.parameterNames.none%",
              "%inlayHints.parameterNames.literals%",
              "%inlayHints.parameterNames.all%"
            ],
            "default": "none",
            "markdownDescription": "%configuration.inlayHints.parameterNames.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.inlayHints.parameterTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.parameterTypes.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.inlayHints.variableTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.variableTypes.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.inlayHints.propertyDeclarationTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.propertyDeclarationTypes.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.inlayHints.functionLikeReturnTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.functionLikeReturnTypes.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.inlayHints.enumMemberValues.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.enumMemberValues.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.inlayHints.parameterNames.enabled": {
            "type": "string",
            "enum": ["none", "literals", "all"],
            "enumDescriptions": [
              "%inlayHints.parameterNames.none%",
              "%inlayHints.parameterNames.literals%",
              "%inlayHints.parameterNames.all%"
            ],
            "default": "none",
            "markdownDescription": "%configuration.inlayHints.parameterNames.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.inlayHints.parameterTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.parameterTypes.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.inlayHints.variableTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.variableTypes.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.inlayHints.propertyDeclarationTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.propertyDeclarationTypes.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.inlayHints.functionLikeReturnTypes.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.functionLikeReturnTypes.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.inlayHints.enumMemberValues.enabled": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.inlayHints.enumMemberValues.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.includeCompletionsForImportStatements": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.includeCompletionsForImportStatements%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.includeCompletionsForImportStatements": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.includeCompletionsForImportStatements%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.reportStyleChecksAsWarnings": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.reportStyleChecksAsWarnings%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.validate.enable": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.validate.enable%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.enable": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.format.enable%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterCommaDelimiter": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterCommaDelimiter%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterConstructor": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterConstructor%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterSemicolonInForStatements": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterSemicolonInForStatements%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceBeforeAndAfterBinaryOperators%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterKeywordsInControlFlowStatements%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterFunctionKeywordForAnonymousFunctions%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceBeforeFunctionParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceBeforeFunctionParenthesis%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.insertSpaceAfterTypeAssertion": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterTypeAssertion%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.placeOpenBraceOnNewLineForFunctions": {
            "type": "boolean",
            "default": false,
            "description": "%format.placeOpenBraceOnNewLineForFunctions%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.placeOpenBraceOnNewLineForControlBlocks": {
            "type": "boolean",
            "default": false,
            "description": "%format.placeOpenBraceOnNewLineForControlBlocks%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.format.semicolons": {
            "type": "string",
            "default": "ignore",
            "description": "%format.semicolons%",
            "scope": "resource",
            "enum": ["ignore", "insert", "remove"],
            "enumDescriptions": [
              "%format.semicolons.ignore%",
              "%format.semicolons.insert%",
              "%format.semicolons.remove%"
            ],
            "owner": "%configuration.typescript%"
          },
          "typescript.format.indentSwitchCase": {
            "type": "boolean",
            "default": true,
            "description": "%format.indentSwitchCase%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.validate.enable": {
            "type": "boolean",
            "default": true,
            "description": "%javascript.validate.enable%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.enable": {
            "type": "boolean",
            "default": true,
            "description": "%javascript.format.enable%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterCommaDelimiter": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterCommaDelimiter%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterConstructor": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterConstructor%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterSemicolonInForStatements": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterSemicolonInForStatements%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceBeforeAndAfterBinaryOperators%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterKeywordsInControlFlowStatements%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterFunctionKeywordForAnonymousFunctions%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceBeforeFunctionParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceBeforeFunctionParenthesis%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
            "type": "boolean",
            "default": true,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
            "type": "boolean",
            "default": false,
            "description": "%format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.placeOpenBraceOnNewLineForFunctions": {
            "type": "boolean",
            "default": false,
            "description": "%format.placeOpenBraceOnNewLineForFunctions%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.placeOpenBraceOnNewLineForControlBlocks": {
            "type": "boolean",
            "default": false,
            "description": "%format.placeOpenBraceOnNewLineForControlBlocks%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.format.semicolons": {
            "type": "string",
            "default": "ignore",
            "description": "%format.semicolons%",
            "scope": "resource",
            "enum": ["ignore", "insert", "remove"],
            "enumDescriptions": [
              "%format.semicolons.ignore%",
              "%format.semicolons.insert%",
              "%format.semicolons.remove%"
            ],
            "owner": "%configuration.typescript%"
          },
          "js/ts.implicitProjectConfig.module": {
            "type": "string",
            "markdownDescription": "%configuration.implicitProjectConfig.module%",
            "default": "ESNext",
            "enum": [
              "CommonJS",
              "AMD",
              "System",
              "UMD",
              "ES6",
              "ES2015",
              "ES2020",
              "ESNext",
              "None",
              "ES2022",
              "Node12",
              "NodeNext"
            ],
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "js/ts.implicitProjectConfig.target": {
            "type": "string",
            "default": "ES2020",
            "markdownDescription": "%configuration.implicitProjectConfig.target%",
            "enum": [
              "ES3",
              "ES5",
              "ES6",
              "ES2015",
              "ES2016",
              "ES2017",
              "ES2018",
              "ES2019",
              "ES2020",
              "ES2021",
              "ES2022",
              "ESNext"
            ],
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.implicitProjectConfig.checkJs": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.implicitProjectConfig.checkJs%",
            "markdownDeprecationMessage": "%configuration.javascript.checkJs.checkJs.deprecation%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "js/ts.implicitProjectConfig.checkJs": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.implicitProjectConfig.checkJs%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.implicitProjectConfig.experimentalDecorators": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.implicitProjectConfig.experimentalDecorators%",
            "markdownDeprecationMessage": "%configuration.javascript.checkJs.experimentalDecorators.deprecation%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "js/ts.implicitProjectConfig.experimentalDecorators": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%configuration.implicitProjectConfig.experimentalDecorators%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "js/ts.implicitProjectConfig.strictNullChecks": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%configuration.implicitProjectConfig.strictNullChecks%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "js/ts.implicitProjectConfig.strictFunctionTypes": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%configuration.implicitProjectConfig.strictFunctionTypes%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.names": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%configuration.suggest.names%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsc.autoDetect": {
            "type": "string",
            "default": "on",
            "enum": ["on", "off", "build", "watch"],
            "markdownEnumDescriptions": [
              "%typescript.tsc.autoDetect.on%",
              "%typescript.tsc.autoDetect.off%",
              "%typescript.tsc.autoDetect.build%",
              "%typescript.tsc.autoDetect.watch%"
            ],
            "description": "%typescript.tsc.autoDetect%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.paths": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.paths%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.paths": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.paths%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.autoImports": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.autoImports%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.autoImports": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.autoImports%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.completeJSDocs": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.completeJSDocs%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.completeJSDocs": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.completeJSDocs%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.jsdoc.generateReturns": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%configuration.suggest.jsdoc.generateReturns%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.jsdoc.generateReturns": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%configuration.suggest.jsdoc.generateReturns%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.locale": {
            "type": "string",
            "default": "auto",
            "enum": [
              "auto",
              "de",
              "es",
              "en",
              "fr",
              "it",
              "ja",
              "ko",
              "ru",
              "zh-CN",
              "zh-TW"
            ],
            "enumDescriptions": [
              "%typescript.locale.auto%",
              "Deutsch",
              "español",
              "English",
              "français",
              "italiano",
              "日本語",
              "한국어",
              "русский",
              "中文(简体)",
              "中文(繁體)"
            ],
            "markdownDescription": "%typescript.locale%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggestionActions.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%javascript.suggestionActions.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggestionActions.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.suggestionActions.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.preferences.quoteStyle": {
            "type": "string",
            "enum": ["auto", "single", "double"],
            "default": "auto",
            "markdownDescription": "%typescript.preferences.quoteStyle%",
            "markdownEnumDescriptions": [
              "%typescript.preferences.quoteStyle.auto%",
              "%typescript.preferences.quoteStyle.single%",
              "%typescript.preferences.quoteStyle.double%"
            ],
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.quoteStyle": {
            "type": "string",
            "enum": ["auto", "single", "double"],
            "default": "auto",
            "markdownDescription": "%typescript.preferences.quoteStyle%",
            "markdownEnumDescriptions": [
              "%typescript.preferences.quoteStyle.auto%",
              "%typescript.preferences.quoteStyle.single%",
              "%typescript.preferences.quoteStyle.double%"
            ],
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "javascript.preferences.importModuleSpecifier": {
            "type": "string",
            "enum": [
              "shortest",
              "relative",
              "non-relative",
              "project-relative"
            ],
            "markdownEnumDescriptions": [
              "%typescript.preferences.importModuleSpecifier.shortest%",
              "%typescript.preferences.importModuleSpecifier.relative%",
              "%typescript.preferences.importModuleSpecifier.nonRelative%",
              "%typescript.preferences.importModuleSpecifier.projectRelative%"
            ],
            "default": "shortest",
            "description": "%typescript.preferences.importModuleSpecifier%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.importModuleSpecifier": {
            "type": "string",
            "enum": [
              "shortest",
              "relative",
              "non-relative",
              "project-relative"
            ],
            "markdownEnumDescriptions": [
              "%typescript.preferences.importModuleSpecifier.shortest%",
              "%typescript.preferences.importModuleSpecifier.relative%",
              "%typescript.preferences.importModuleSpecifier.nonRelative%",
              "%typescript.preferences.importModuleSpecifier.projectRelative%"
            ],
            "default": "shortest",
            "description": "%typescript.preferences.importModuleSpecifier%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "javascript.preferences.importModuleSpecifierEnding": {
            "type": "string",
            "enum": ["auto", "minimal", "index", "js"],
            "enumItemLabels": [
              null,
              null,
              null,
              "%typescript.preferences.importModuleSpecifierEnding.label.js%"
            ],
            "markdownEnumDescriptions": [
              "%typescript.preferences.importModuleSpecifierEnding.auto%",
              "%typescript.preferences.importModuleSpecifierEnding.minimal%",
              "%typescript.preferences.importModuleSpecifierEnding.index%",
              "%typescript.preferences.importModuleSpecifierEnding.js%"
            ],
            "default": "auto",
            "description": "%typescript.preferences.importModuleSpecifierEnding%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.importModuleSpecifierEnding": {
            "type": "string",
            "enum": ["auto", "minimal", "index", "js"],
            "enumItemLabels": [
              null,
              null,
              null,
              "%typescript.preferences.importModuleSpecifierEnding.label.js%"
            ],
            "markdownEnumDescriptions": [
              "%typescript.preferences.importModuleSpecifierEnding.auto%",
              "%typescript.preferences.importModuleSpecifierEnding.minimal%",
              "%typescript.preferences.importModuleSpecifierEnding.index%",
              "%typescript.preferences.importModuleSpecifierEnding.js%"
            ],
            "default": "auto",
            "description": "%typescript.preferences.importModuleSpecifierEnding%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "javascript.preferences.jsxAttributeCompletionStyle": {
            "type": "string",
            "enum": ["auto", "braces", "none"],
            "markdownEnumDescriptions": [
              "%javascript.preferences.jsxAttributeCompletionStyle.auto%",
              "%typescript.preferences.jsxAttributeCompletionStyle.braces%",
              "%typescript.preferences.jsxAttributeCompletionStyle.none%"
            ],
            "default": "auto",
            "description": "%typescript.preferences.jsxAttributeCompletionStyle%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.jsxAttributeCompletionStyle": {
            "type": "string",
            "enum": ["auto", "braces", "none"],
            "markdownEnumDescriptions": [
              "%typescript.preferences.jsxAttributeCompletionStyle.auto%",
              "%typescript.preferences.jsxAttributeCompletionStyle.braces%",
              "%typescript.preferences.jsxAttributeCompletionStyle.none%"
            ],
            "default": "auto",
            "description": "%typescript.preferences.jsxAttributeCompletionStyle%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.includePackageJsonAutoImports": {
            "type": "string",
            "enum": ["auto", "on", "off"],
            "enumDescriptions": [
              "%typescript.preferences.includePackageJsonAutoImports.auto%",
              "%typescript.preferences.includePackageJsonAutoImports.on%",
              "%typescript.preferences.includePackageJsonAutoImports.off%"
            ],
            "default": "auto",
            "markdownDescription": "%typescript.preferences.includePackageJsonAutoImports%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.autoImportFileExcludePatterns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "markdownDescription": "%typescript.preferences.autoImportFileExcludePatterns%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.preferences.autoImportFileExcludePatterns": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "markdownDescription": "%typescript.preferences.autoImportFileExcludePatterns%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.preferTypeOnlyAutoImports": {
            "type": "boolean",
            "default": false,
            "markdownDescription": "%typescript.preferences.preferTypeOnlyAutoImports%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.preferences.renameShorthandProperties": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.preferences.useAliasesForRenames%",
            "deprecationMessage": "%typescript.preferences.renameShorthandProperties.deprecationMessage%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.renameShorthandProperties": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.preferences.useAliasesForRenames%",
            "deprecationMessage": "%typescript.preferences.renameShorthandProperties.deprecationMessage%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "javascript.preferences.useAliasesForRenames": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.preferences.useAliasesForRenames%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.useAliasesForRenames": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.preferences.useAliasesForRenames%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "javascript.preferences.renameMatchingJsxTags": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.preferences.renameMatchingJsxTags%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.preferences.renameMatchingJsxTags": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.preferences.renameMatchingJsxTags%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.updateImportsOnFileMove.enabled": {
            "type": "string",
            "enum": ["prompt", "always", "never"],
            "markdownEnumDescriptions": [
              "%typescript.updateImportsOnFileMove.enabled.prompt%",
              "%typescript.updateImportsOnFileMove.enabled.always%",
              "%typescript.updateImportsOnFileMove.enabled.never%"
            ],
            "default": "prompt",
            "description": "%typescript.updateImportsOnFileMove.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "javascript.updateImportsOnFileMove.enabled": {
            "type": "string",
            "enum": ["prompt", "always", "never"],
            "markdownEnumDescriptions": [
              "%typescript.updateImportsOnFileMove.enabled.prompt%",
              "%typescript.updateImportsOnFileMove.enabled.always%",
              "%typescript.updateImportsOnFileMove.enabled.never%"
            ],
            "default": "prompt",
            "description": "%typescript.updateImportsOnFileMove.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.autoClosingTags": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.autoClosingTags%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "javascript.autoClosingTags": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.autoClosingTags%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.suggest.enabled%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%typescript.suggest.enabled%",
            "scope": "language-overridable",
            "owner": "%configuration.typescript%"
          },
          "typescript.surveys.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.surveys.enabled%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.useSeparateSyntaxServer": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.tsserver.useSeparateSyntaxServer%",
            "markdownDeprecationMessage": "%configuration.tsserver.useSeparateSyntaxServer.deprecation%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.useSyntaxServer": {
            "type": "string",
            "scope": "window",
            "description": "%configuration.tsserver.useSyntaxServer%",
            "default": "auto",
            "enum": ["always", "never", "auto"],
            "enumDescriptions": [
              "%configuration.tsserver.useSyntaxServer.always%",
              "%configuration.tsserver.useSyntaxServer.never%",
              "%configuration.tsserver.useSyntaxServer.auto%"
            ],
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.maxTsServerMemory": {
            "type": "number",
            "default": 3072,
            "markdownDescription": "%configuration.tsserver.maxTsServerMemory%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.experimental.enableProjectDiagnostics": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.tsserver.experimental.enableProjectDiagnostics%",
            "scope": "window",
            "tags": ["experimental"],
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.watchOptions": {
            "type": "object",
            "description": "%configuration.tsserver.watchOptions%",
            "scope": "window",
            "properties": {
              "watchFile": {
                "type": "string",
                "description": "%configuration.tsserver.watchOptions.watchFile%",
                "enum": [
                  "fixedChunkSizePolling",
                  "fixedPollingInterval",
                  "priorityPollingInterval",
                  "dynamicPriorityPolling",
                  "useFsEvents",
                  "useFsEventsOnParentDirectory"
                ],
                "enumDescriptions": [
                  "%configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling%",
                  "%configuration.tsserver.watchOptions.watchFile.fixedPollingInterval%",
                  "%configuration.tsserver.watchOptions.watchFile.priorityPollingInterval%",
                  "%configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling%",
                  "%configuration.tsserver.watchOptions.watchFile.useFsEvents%",
                  "%configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory%"
                ],
                "default": "useFsEvents"
              },
              "watchDirectory": {
                "type": "string",
                "description": "%configuration.tsserver.watchOptions.watchDirectory%",
                "enum": [
                  "fixedChunkSizePolling",
                  "fixedPollingInterval",
                  "dynamicPriorityPolling",
                  "useFsEvents"
                ],
                "enumDescriptions": [
                  "%configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling%",
                  "%configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval%",
                  "%configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling%",
                  "%configuration.tsserver.watchOptions.watchDirectory.useFsEvents%"
                ],
                "default": "useFsEvents"
              },
              "fallbackPolling": {
                "type": "string",
                "description": "%configuration.tsserver.watchOptions.fallbackPolling%",
                "enum": [
                  "fixedPollingInterval",
                  "priorityPollingInterval",
                  "dynamicPriorityPolling"
                ],
                "enumDescriptions": [
                  "configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval",
                  "configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval",
                  "configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling"
                ]
              },
              "synchronousWatchDirectory": {
                "type": "boolean",
                "description": "%configuration.tsserver.watchOptions.synchronousWatchDirectory%"
              }
            },
            "owner": "%configuration.typescript%"
          },
          "typescript.workspaceSymbols.scope": {
            "type": "string",
            "enum": ["allOpenProjects", "currentProject"],
            "enumDescriptions": [
              "%typescript.workspaceSymbols.scope.allOpenProjects%",
              "%typescript.workspaceSymbols.scope.currentProject%"
            ],
            "default": "allOpenProjects",
            "markdownDescription": "%typescript.workspaceSymbols.scope%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.suggest.classMemberSnippets.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.classMemberSnippets.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.classMemberSnippets.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.classMemberSnippets.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.suggest.objectLiteralMethodSnippets.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.suggest.objectLiteralMethodSnippets.enabled%",
            "scope": "resource",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.web.projectWideIntellisense.enabled": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.tsserver.web.projectWideIntellisense.enabled%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.web.projectWideIntellisense.suppressSemanticErrors": {
            "type": "boolean",
            "default": true,
            "description": "%configuration.tsserver.web.projectWideIntellisense.suppressSemanticErrors%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.tsserver.nodePath": {
            "type": "string",
            "description": "%configuration.tsserver.nodePath%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.experimental.tsserver.web.typeAcquisition.enabled": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.experimental.tsserver.web.typeAcquisition.enabled%",
            "scope": "window",
            "tags": ["experimental"],
            "owner": "%configuration.typescript%"
          },
          "typescript.preferGoToSourceDefinition": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.preferGoToSourceDefinition%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "javascript.preferGoToSourceDefinition": {
            "type": "boolean",
            "default": false,
            "description": "%configuration.preferGoToSourceDefinition%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          },
          "typescript.workspaceSymbols.excludeLibrarySymbols": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "%typescript.workspaceSymbols.excludeLibrarySymbols%",
            "scope": "window",
            "owner": "%configuration.typescript%"
          }
        }
      }
    ],
    "commands": [
      {
        "command": "typescript.reloadProjects",
        "title": "%reloadProjects.title%",
        "category": "TypeScript"
      },
      {
        "command": "javascript.reloadProjects",
        "title": "%reloadProjects.title%",
        "category": "JavaScript"
      },
      {
        "command": "typescript.selectTypeScriptVersion",
        "title": "%typescript.selectTypeScriptVersion.title%",
        "category": "TypeScript"
      },
      {
        "command": "typescript.goToProjectConfig",
        "title": "%typescript.goToProjectConfig.title%",
        "category": "TypeScript"
      },
      {
        "command": "javascript.goToProjectConfig",
        "title": "%javascript.goToProjectConfig.title%",
        "category": "JavaScript"
      },
      {
        "command": "typescript.openTsServerLog",
        "title": "%typescript.openTsServerLog.title%",
        "category": "TypeScript"
      },
      {
        "command": "typescript.restartTsServer",
        "title": "%typescript.restartTsServer%",
        "category": "TypeScript"
      },
      {
        "command": "typescript.findAllFileReferences",
        "title": "%typescript.findAllFileReferences%",
        "category": "TypeScript"
      },
      {
        "command": "typescript.goToSourceDefinition",
        "title": "%typescript.goToSourceDefinition%",
        "category": "TypeScript"
      },
      {
        "command": "typescript.sortImports",
        "title": "%typescript.sortImports%",
        "category": "TypeScript"
      },
      {
        "command": "javascript.sortImports",
        "title": "%typescript.sortImports%",
        "category": "JavaScript"
      },
      {
        "command": "typescript.removeUnusedImports",
        "title": "%typescript.removeUnusedImports%",
        "category": "TypeScript"
      },
      {
        "command": "javascript.removeUnusedImports",
        "title": "%typescript.removeUnusedImports%",
        "category": "JavaScript"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "typescript.reloadProjects",
          "when": "editorLangId == typescript && typescript.isManagedFile"
        },
        {
          "command": "typescript.reloadProjects",
          "when": "editorLangId == typescriptreact && typescript.isManagedFile"
        },
        {
          "command": "javascript.reloadProjects",
          "when": "editorLangId == javascript && typescript.isManagedFile"
        },
        {
          "command": "javascript.reloadProjects",
          "when": "editorLangId == javascriptreact && typescript.isManagedFile"
        },
        {
          "command": "typescript.goToProjectConfig",
          "when": "editorLangId == typescript && typescript.isManagedFile"
        },
        {
          "command": "typescript.goToProjectConfig",
          "when": "editorLangId == typescriptreact"
        },
        {
          "command": "javascript.goToProjectConfig",
          "when": "editorLangId == javascript && typescript.isManagedFile"
        },
        {
          "command": "javascript.goToProjectConfig",
          "when": "editorLangId == javascriptreact && typescript.isManagedFile"
        },
        {
          "command": "typescript.selectTypeScriptVersion",
          "when": "typescript.isManagedFile"
        },
        {
          "command": "typescript.openTsServerLog",
          "when": "typescript.isManagedFile"
        },
        {
          "command": "typescript.restartTsServer",
          "when": "typescript.isManagedFile"
        },
        {
          "command": "typescript.findAllFileReferences",
          "when": "tsSupportsFileReferences && typescript.isManagedFile"
        },
        {
          "command": "typescript.goToSourceDefinition",
          "when": "tsSupportsSourceDefinition && typescript.isManagedFile"
        },
        {
          "command": "typescript.sortImports",
          "when": "supportedCodeAction =~ /(\\s|^)source\\.sortImports\\b/ && editorLangId =~ /^typescript(react)?$/"
        },
        {
          "command": "javascript.sortImports",
          "when": "supportedCodeAction =~ /(\\s|^)source\\.sortImports\\b/ && editorLangId =~ /^javascript(react)?$/"
        },
        {
          "command": "typescript.removeUnusedImports",
          "when": "supportedCodeAction =~ /(\\s|^)source\\.removeUnusedImports\\b/ && editorLangId =~ /^typescript(react)?$/"
        },
        {
          "command": "javascript.removeUnusedImports",
          "when": "supportedCodeAction =~ /(\\s|^)source\\.removeUnusedImports\\b/ && editorLangId =~ /^javascript(react)?$/"
        }
      ],
      "editor/context": [
        {
          "command": "typescript.goToSourceDefinition",
          "group": "navigation@9",
          "when": "tsSupportsSourceDefinition && resourceLangId == typescript"
        },
        {
          "command": "typescript.goToSourceDefinition",
          "group": "navigation@9",
          "when": "tsSupportsSourceDefinition && resourceLangId == typescriptreact"
        },
        {
          "command": "typescript.goToSourceDefinition",
          "group": "navigation@9",
          "when": "tsSupportsSourceDefinition && resourceLangId == javascript"
        },
        {
          "command": "typescript.goToSourceDefinition",
          "group": "navigation@9",
          "when": "tsSupportsSourceDefinition && resourceLangId == javascriptreact"
        }
      ],
      "explorer/context": [
        {
          "command": "typescript.findAllFileReferences",
          "group": "4_search",
          "when": "tsSupportsFileReferences && resourceLangId == typescript"
        },
        {
          "command": "typescript.findAllFileReferences",
          "group": "4_search",
          "when": "tsSupportsFileReferences && resourceLangId == typescriptreact"
        },
        {
          "command": "typescript.findAllFileReferences",
          "group": "4_search",
          "when": "tsSupportsFileReferences && resourceLangId == javascript"
        },
        {
          "command": "typescript.findAllFileReferences",
          "group": "4_search",
          "when": "tsSupportsFileReferences && resourceLangId == javascriptreact"
        }
      ],
      "editor/title/context": [
        {
          "command": "typescript.findAllFileReferences",
          "when": "tsSupportsFileReferences && resourceLangId == javascript"
        },
        {
          "command": "typescript.findAllFileReferences",
          "when": "tsSupportsFileReferences && resourceLangId == javascriptreact"
        },
        {
          "command": "typescript.findAllFileReferences",
          "when": "tsSupportsFileReferences && resourceLangId == typescript"
        },
        {
          "command": "typescript.findAllFileReferences",
          "when": "tsSupportsFileReferences && resourceLangId == typescriptreact"
        }
      ]
    },
    "taskDefinitions": [
      {
        "taskType": "typescript",
        "source": "typescript-language-features",
        "properties": {
          "required": ["tsconfig"],
          "all": ["tsconfig", "option"],
          "schema": {
            "type": "object",
            "required": ["tsconfig"],
            "properties": {
              "tsconfig": {
                "type": "string",
                "description": "%taskDefinition.tsconfig.description%"
              },
              "option": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "const": "typescript"
              }
            },
            "when": "shellExecutionSupported"
          }
        }
      }
    ],
    "problemMatchers": [
      {
        "name": "tsc",
        "label": "%typescript.problemMatchers.tsc.label%",
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": ["relative", "${cwd}"],
        "pattern": "$tsc"
      },
      {
        "name": "tsc-watch",
        "label": "%typescript.problemMatchers.tscWatch.label%",
        "owner": "typescript",
        "source": "ts",
        "applyTo": "closedDocuments",
        "fileLocation": ["relative", "${cwd}"],
        "pattern": "$tsc",
        "background": {
          "activeOnStart": true,
          "beginsPattern": {
            "regexp": "^\\s*(?:message TS6032:|\\[?\\D*.{1,2}[:.].{1,2}[:.].{1,2}\\D*(├\\D*\\d{1,2}\\D+┤)?(?:\\]| -)) (Starting compilation in watch mode|File change detected\\. Starting incremental compilation)\\.\\.\\."
          },
          "endsPattern": {
            "regexp": "^\\s*(?:message TS6042:|\\[?\\D*.{1,2}[:.].{1,2}[:.].{1,2}\\D*(├\\D*\\d{1,2}\\D+┤)?(?:\\]| -)) (?:Compilation complete\\.|Found \\d+ errors?\\.) Watching for file changes\\."
          }
        }
      }
    ],
    "problemPatterns": [
      {
        "name": "tsc",
        "regexp": "^([^\\s].*)[\\(:](\\d+)[,:](\\d+)(?:\\):\\s+|\\s+-\\s+)(error|warning|info)\\s+TS(\\d+)\\s*:\\s*(.*)$",
        "file": 1,
        "line": 2,
        "column": 3,
        "severity": 4,
        "code": 5,
        "message": 6
      }
    ]
  }
}
